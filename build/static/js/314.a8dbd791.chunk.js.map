{"version":3,"file":"static/js/314.a8dbd791.chunk.js","mappings":"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","sources":["webpack://nutrea-genie/./src/components/ui/tabs.module.css?96ba","components/ui/tabs.js","webpack://nutrea-genie/./src/pages/Student.module.css?4a55","pages/Student.js","../node_modules/@radix-ui/react-direction/src/Direction.tsx","../node_modules/@radix-ui/react-roving-focus/src/RovingFocusGroup.tsx","../node_modules/@radix-ui/react-tabs/src/Tabs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tabsList\":\"tabs_tabsList__xgVbz\",\"tabsTrigger\":\"tabs_tabsTrigger__IpCU3\",\"tabsContent\":\"tabs_tabsContent__03STK\"};","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\nimport styles from './tabs.module.css'\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef(({ className = '', ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={`${styles.tabsList} ${className}`.trim()}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef(({ className = '', ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={`${styles.tabsTrigger} ${className}`.trim()}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef(({ className = '', ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={`${styles.tabsContent} ${className}`.trim()}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Student_container__0jH6s\",\"backButton\":\"Student_backButton__hxE-b\",\"backIcon\":\"Student_backIcon__d6eZe\",\"content\":\"Student_content__VynVP\",\"header\":\"Student_header__1WUhg\",\"title\":\"Student_title__xH8u-\",\"subtitle\":\"Student_subtitle__Z0u4q\",\"tabs\":\"Student_tabs__zzbw7\",\"tabsList\":\"Student_tabsList__nShTh\",\"priceSection\":\"Student_priceSection__mR+aE\",\"price\":\"Student_price__IkFMY\",\"priceDescription\":\"Student_priceDescription__lcL-k\",\"infoSection\":\"Student_infoSection__TvaiK\",\"listContainer\":\"Student_listContainer__xzk6T\",\"listTitle\":\"Student_listTitle__cJ-wB\",\"benefitsList\":\"Student_benefitsList__mKX7r\",\"ctaButton\":\"Student_ctaButton__wOCf5\",\"ambassadorContent\":\"Student_ambassadorContent__kRzn9\",\"applyButton\":\"Student_applyButton__+j14y\"};","import React from 'react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"../components/ui/tabs\";\nimport { Button } from \"../components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ArrowLeft } from \"lucide-react\";\nimport styles from './Student.module.css';\n\nexport default function StudentsPage() {\n  const navigate = useNavigate();\n\n  return (\n    <div className={styles.container}>\n      <Button\n        variant=\"ghost\"\n        onClick={() => navigate(\"/\")}\n        className={styles.backButton}\n      >\n        <ArrowLeft className={styles.backIcon} />\n        Back to Home\n      </Button>\n\n      <div className={styles.content}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Students</h1>\n          <p className={styles.subtitle}>\n            Special offers and opportunities for students\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"discount\" className={styles.tabs}>\n          <TabsList className={styles.tabsList}>\n            <TabsTrigger value=\"discount\">Student Discount</TabsTrigger>\n            <TabsTrigger value=\"ambassador\">Campus Ambassador</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"discount\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Student Discount</CardTitle>\n                <CardDescription>\n                  Get access to SupplementScribe at a special student rate\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className={styles.priceSection}>\n                  <h3 className={styles.price}>$15/month</h3>\n                  <p className={styles.priceDescription}>\n                    Available for all students with a valid .edu email address\n                  </p>\n                </div>\n                <div className={styles.infoSection}>\n                  <div className={styles.listContainer}>\n                    <h4 className={styles.listTitle}>How it works:</h4>\n                    <ul className={styles.benefitsList}>\n                      <li>Sign up with your .edu email address</li>\n                      <li>Get instant access to all premium features</li>\n                      <li>Save $5 every month compared to regular pricing</li>\n                      <li>No additional verification required</li>\n                    </ul>\n                  </div>\n                  <Button\n                    onClick={() => navigate(\"/input\")}\n                    className={styles.ctaButton}\n                  >\n                    Get Started with Student Discount\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"ambassador\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Campus Ambassador Program</CardTitle>\n                <CardDescription>\n                  Represent SupplementScribe at your university and earn rewards\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className={styles.ambassadorContent}>\n                  <div className={styles.listContainer}>\n                    <h4 className={styles.listTitle}>Program Benefits:</h4>\n                    <ul className={styles.benefitsList}>\n                      <li>Free premium subscription while you're an ambassador</li>\n                      <li>Earn 15% commissions for every referral</li>\n                      <li>Exclusive ambassador swag and merchandise</li>\n                      <li>Add valuable experience to your resume</li>\n                    </ul>\n                  </div>\n                  <div className={styles.listContainer}>\n                    <h4 className={styles.listTitle}>Requirements:</h4>\n                    <ul className={styles.benefitsList}>\n                      <li>Currently enrolled student</li>\n                      <li>Post at least 5 Stories or Posts a month</li>\n                    </ul>\n                  </div>\n                  <Button\n                    onClick={() => navigate(\"/work-with-us\")}\n                    className={styles.applyButton}\n                  >\n                    Apply to Become an Ambassador\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}","import * as React from 'react';\n\ntype Direction = 'ltr' | 'rtl';\nconst DirectionContext = React.createContext<Direction | undefined>(undefined);\n\n/* -------------------------------------------------------------------------------------------------\n * Direction\n * -----------------------------------------------------------------------------------------------*/\n\ninterface DirectionProviderProps {\n  children?: React.ReactNode;\n  dir: Direction;\n}\nconst DirectionProvider: React.FC<DirectionProviderProps> = (props) => {\n  const { dir, children } = props;\n  return <DirectionContext.Provider value={dir}>{children}</DirectionContext.Provider>;\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction useDirection(localDir?: Direction) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || 'ltr';\n}\n\nconst Provider = DirectionProvider;\n\nexport {\n  useDirection,\n  //\n  Provider,\n  //\n  DirectionProvider,\n};\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useDirection } from '@radix-ui/react-direction';\n\nimport type { Scope } from '@radix-ui/react-context';\n\nconst ENTRY_FOCUS = 'rovingFocusGroup.onEntryFocus';\nconst EVENT_OPTIONS = { bubbles: false, cancelable: true };\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'RovingFocusGroup';\n\ntype ItemData = { id: string; focusable: boolean; active: boolean };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  HTMLSpanElement,\n  ItemData\n>(GROUP_NAME);\n\ntype ScopedProps<P> = P & { __scopeRovingFocusGroup?: Scope };\nconst [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\n\ntype Orientation = React.AriaAttributes['aria-orientation'];\ntype Direction = 'ltr' | 'rtl';\n\ninterface RovingFocusGroupOptions {\n  /**\n   * The orientation of the group.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   */\n  orientation?: Orientation;\n  /**\n   * The direction of navigation between items.\n   */\n  dir?: Direction;\n  /**\n   * Whether keyboard navigation should loop around\n   * @defaultValue false\n   */\n  loop?: boolean;\n}\n\ntype RovingContextValue = RovingFocusGroupOptions & {\n  currentTabStopId: string | null;\n  onItemFocus(tabStopId: string): void;\n  onItemShiftTab(): void;\n  onFocusableItemAdd(): void;\n  onFocusableItemRemove(): void;\n};\n\nconst [RovingFocusProvider, useRovingFocusContext] =\n  createRovingFocusGroupContext<RovingContextValue>(GROUP_NAME);\n\ntype RovingFocusGroupElement = RovingFocusGroupImplElement;\ninterface RovingFocusGroupProps extends RovingFocusGroupImplProps {}\n\nconst RovingFocusGroup = React.forwardRef<RovingFocusGroupElement, RovingFocusGroupProps>(\n  (props: ScopedProps<RovingFocusGroupProps>, forwardedRef) => {\n    return (\n      <Collection.Provider scope={props.__scopeRovingFocusGroup}>\n        <Collection.Slot scope={props.__scopeRovingFocusGroup}>\n          <RovingFocusGroupImpl {...props} ref={forwardedRef} />\n        </Collection.Slot>\n      </Collection.Provider>\n    );\n  }\n);\n\nRovingFocusGroup.displayName = GROUP_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype RovingFocusGroupImplElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface RovingFocusGroupImplProps\n  extends Omit<PrimitiveDivProps, 'dir'>,\n    RovingFocusGroupOptions {\n  currentTabStopId?: string | null;\n  defaultCurrentTabStopId?: string;\n  onCurrentTabStopIdChange?: (tabStopId: string | null) => void;\n  onEntryFocus?: (event: Event) => void;\n  preventScrollOnEntryFocus?: boolean;\n}\n\nconst RovingFocusGroupImpl = React.forwardRef<\n  RovingFocusGroupImplElement,\n  RovingFocusGroupImplProps\n>((props: ScopedProps<RovingFocusGroupImplProps>, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef<RovingFocusGroupImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange,\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n\n  return (\n    <RovingFocusProvider\n      scope={__scopeRovingFocusGroup}\n      orientation={orientation}\n      dir={direction}\n      loop={loop}\n      currentTabStopId={currentTabStopId}\n      onItemFocus={React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      )}\n      onItemShiftTab={React.useCallback(() => setIsTabbingBackOut(true), [])}\n      onFocusableItemAdd={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      )}\n      onFocusableItemRemove={React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      )}\n    >\n      <Primitive.div\n        tabIndex={isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0}\n        data-orientation={orientation}\n        {...groupProps}\n        ref={composedRefs}\n        style={{ outline: 'none', ...props.style }}\n        onMouseDown={composeEventHandlers(props.onMouseDown, () => {\n          isClickFocusRef.current = true;\n        })}\n        onFocus={composeEventHandlers(props.onFocus, (event) => {\n          // We normally wouldn't need this check, because we already check\n          // that the focus is on the current target and not bubbling to it.\n          // We do this because Safari doesn't focus buttons when clicked, and\n          // instead, the wrapper will get focused and not through a bubbling event.\n          const isKeyboardFocus = !isClickFocusRef.current;\n\n          if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n            const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n            event.currentTarget.dispatchEvent(entryFocusEvent);\n\n            if (!entryFocusEvent.defaultPrevented) {\n              const items = getItems().filter((item) => item.focusable);\n              const activeItem = items.find((item) => item.active);\n              const currentItem = items.find((item) => item.id === currentTabStopId);\n              const candidateItems = [activeItem, currentItem, ...items].filter(\n                Boolean\n              ) as typeof items;\n              const candidateNodes = candidateItems.map((item) => item.ref.current!);\n              focusFirst(candidateNodes, preventScrollOnEntryFocus);\n            }\n          }\n\n          isClickFocusRef.current = false;\n        })}\n        onBlur={composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))}\n      />\n    </RovingFocusProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * RovingFocusGroupItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'RovingFocusGroupItem';\n\ntype RovingFocusItemElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = React.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface RovingFocusItemProps extends PrimitiveSpanProps {\n  tabStopId?: string;\n  focusable?: boolean;\n  active?: boolean;\n}\n\nconst RovingFocusGroupItem = React.forwardRef<RovingFocusItemElement, RovingFocusItemProps>(\n  (props: ScopedProps<RovingFocusItemProps>, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n\n    return (\n      <Collection.ItemSlot\n        scope={__scopeRovingFocusGroup}\n        id={id}\n        focusable={focusable}\n        active={active}\n      >\n        <Primitive.span\n          tabIndex={isCurrentTabStop ? 0 : -1}\n          data-orientation={context.orientation}\n          {...itemProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // We prevent focusing non-focusable items on `mousedown`.\n            // Even though the item has tabIndex={-1}, that only means take it out of the tab order.\n            if (!focusable) event.preventDefault();\n            // Safari doesn't focus a button when clicked so we run our logic on mousedown also\n            else context.onItemFocus(id);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => context.onItemFocus(id))}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if (event.key === 'Tab' && event.shiftKey) {\n              context.onItemShiftTab();\n              return;\n            }\n\n            if (event.target !== event.currentTarget) return;\n\n            const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n\n            if (focusIntent !== undefined) {\n              if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n              event.preventDefault();\n              const items = getItems().filter((item) => item.focusable);\n              let candidateNodes = items.map((item) => item.ref.current!);\n\n              if (focusIntent === 'last') candidateNodes.reverse();\n              else if (focusIntent === 'prev' || focusIntent === 'next') {\n                if (focusIntent === 'prev') candidateNodes.reverse();\n                const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                candidateNodes = context.loop\n                  ? wrapArray(candidateNodes, currentIndex + 1)\n                  : candidateNodes.slice(currentIndex + 1);\n              }\n\n              /**\n               * Imperative focus during keydown is risky so we prevent React's batching updates\n               * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n               */\n              setTimeout(() => focusFirst(candidateNodes));\n            }\n          })}\n        />\n      </Collection.ItemSlot>\n    );\n  }\n);\n\nRovingFocusGroupItem.displayName = ITEM_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// prettier-ignore\nconst MAP_KEY_TO_FOCUS_INTENT: Record<string, FocusIntent> = {\n  ArrowLeft: 'prev', ArrowUp: 'prev',\n  ArrowRight: 'next', ArrowDown: 'next',\n  PageUp: 'first', Home: 'first',\n  PageDown: 'last', End: 'last',\n};\n\nfunction getDirectionAwareKey(key: string, dir?: Direction) {\n  if (dir !== 'rtl') return key;\n  return key === 'ArrowLeft' ? 'ArrowRight' : key === 'ArrowRight' ? 'ArrowLeft' : key;\n}\n\ntype FocusIntent = 'first' | 'last' | 'prev' | 'next';\n\nfunction getFocusIntent(event: React.KeyboardEvent, orientation?: Orientation, dir?: Direction) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === 'vertical' && ['ArrowLeft', 'ArrowRight'].includes(key)) return undefined;\n  if (orientation === 'horizontal' && ['ArrowUp', 'ArrowDown'].includes(key)) return undefined;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\n\nfunction focusFirst(candidates: HTMLElement[], preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = RovingFocusGroup;\nconst Item = RovingFocusGroupItem;\n\nexport {\n  createRovingFocusGroupScope,\n  //\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  //\n  Root,\n  Item,\n};\nexport type { RovingFocusGroupProps, RovingFocusItemProps };\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { createRovingFocusGroupScope } from '@radix-ui/react-roving-focus';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport * as RovingFocusGroup from '@radix-ui/react-roving-focus';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useId } from '@radix-ui/react-id';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Tabs\n * -----------------------------------------------------------------------------------------------*/\n\nconst TABS_NAME = 'Tabs';\n\ntype ScopedProps<P> = P & { __scopeTabs?: Scope };\nconst [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope,\n]);\nconst useRovingFocusGroupScope = createRovingFocusGroupScope();\n\ntype TabsContextValue = {\n  baseId: string;\n  value?: string;\n  onValueChange: (value: string) => void;\n  orientation?: TabsProps['orientation'];\n  dir?: TabsProps['dir'];\n  activationMode?: TabsProps['activationMode'];\n};\n\nconst [TabsProvider, useTabsContext] = createTabsContext<TabsContextValue>(TABS_NAME);\n\ntype TabsElement = React.ElementRef<typeof Primitive.div>;\ntype RovingFocusGroupProps = React.ComponentPropsWithoutRef<typeof RovingFocusGroup.Root>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface TabsProps extends PrimitiveDivProps {\n  /** The value for the selected tab, if controlled */\n  value?: string;\n  /** The value of the tab to select by default, if uncontrolled */\n  defaultValue?: string;\n  /** A function called when a new tab is selected */\n  onValueChange?: (value: string) => void;\n  /**\n   * The orientation the tabs are layed out.\n   * Mainly so arrow navigation is done accordingly (left & right vs. up & down)\n   * @defaultValue horizontal\n   */\n  orientation?: RovingFocusGroupProps['orientation'];\n  /**\n   * The direction of navigation between toolbar items.\n   */\n  dir?: RovingFocusGroupProps['dir'];\n  /**\n   * Whether a tab is activated automatically or manually.\n   * @defaultValue automatic\n   * */\n  activationMode?: 'automatic' | 'manual';\n}\n\nconst Tabs = React.forwardRef<TabsElement, TabsProps>(\n  (props: ScopedProps<TabsProps>, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = 'horizontal',\n      dir,\n      activationMode = 'automatic',\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue,\n    });\n\n    return (\n      <TabsProvider\n        scope={__scopeTabs}\n        baseId={useId()}\n        value={value}\n        onValueChange={setValue}\n        orientation={orientation}\n        dir={direction}\n        activationMode={activationMode}\n      >\n        <Primitive.div\n          dir={direction}\n          data-orientation={orientation}\n          {...tabsProps}\n          ref={forwardedRef}\n        />\n      </TabsProvider>\n    );\n  }\n);\n\nTabs.displayName = TABS_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsList\n * -----------------------------------------------------------------------------------------------*/\n\nconst TAB_LIST_NAME = 'TabsList';\n\ntype TabsListElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsListProps extends PrimitiveDivProps {\n  loop?: RovingFocusGroupProps['loop'];\n}\n\nconst TabsList = React.forwardRef<TabsListElement, TabsListProps>(\n  (props: ScopedProps<TabsListProps>, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return (\n      <RovingFocusGroup.Root\n        asChild\n        {...rovingFocusGroupScope}\n        orientation={context.orientation}\n        dir={context.dir}\n        loop={loop}\n      >\n        <Primitive.div\n          role=\"tablist\"\n          aria-orientation={context.orientation}\n          {...listProps}\n          ref={forwardedRef}\n        />\n      </RovingFocusGroup.Root>\n    );\n  }\n);\n\nTabsList.displayName = TAB_LIST_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TabsTrigger';\n\ntype TabsTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TabsTriggerProps extends PrimitiveButtonProps {\n  value: string;\n}\n\nconst TabsTrigger = React.forwardRef<TabsTriggerElement, TabsTriggerProps>(\n  (props: ScopedProps<TabsTriggerProps>, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return (\n      <RovingFocusGroup.Item\n        asChild\n        {...rovingFocusGroupScope}\n        focusable={!disabled}\n        active={isSelected}\n      >\n        <Primitive.button\n          type=\"button\"\n          role=\"tab\"\n          aria-selected={isSelected}\n          aria-controls={contentId}\n          data-state={isSelected ? 'active' : 'inactive'}\n          data-disabled={disabled ? '' : undefined}\n          disabled={disabled}\n          id={triggerId}\n          {...triggerProps}\n          ref={forwardedRef}\n          onMouseDown={composeEventHandlers(props.onMouseDown, (event) => {\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (!disabled && event.button === 0 && event.ctrlKey === false) {\n              context.onValueChange(value);\n            } else {\n              // prevent focus to avoid accidental activation\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n            if ([' ', 'Enter'].includes(event.key)) context.onValueChange(value);\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            // handle \"automatic\" activation if necessary\n            // ie. activate tab following focus\n            const isAutomaticActivation = context.activationMode !== 'manual';\n            if (!isSelected && !disabled && isAutomaticActivation) {\n              context.onValueChange(value);\n            }\n          })}\n        />\n      </RovingFocusGroup.Item>\n    );\n  }\n);\n\nTabsTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TabsContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TabsContent';\n\ntype TabsContentElement = React.ElementRef<typeof Primitive.div>;\ninterface TabsContentProps extends PrimitiveDivProps {\n  value: string;\n\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TabsContent = React.forwardRef<TabsContentElement, TabsContentProps>(\n  (props: ScopedProps<TabsContentProps>, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n\n    return (\n      <Presence present={forceMount || isSelected}>\n        {({ present }) => (\n          <Primitive.div\n            data-state={isSelected ? 'active' : 'inactive'}\n            data-orientation={context.orientation}\n            role=\"tabpanel\"\n            aria-labelledby={triggerId}\n            hidden={!present}\n            id={contentId}\n            tabIndex={0}\n            {...contentProps}\n            ref={forwardedRef}\n            style={{\n              ...props.style,\n              animationDuration: isMountAnimationPreventedRef.current ? '0s' : undefined,\n            }}\n          >\n            {present && children}\n          </Primitive.div>\n        )}\n      </Presence>\n    );\n  }\n);\n\nTabsContent.displayName = CONTENT_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction makeTriggerId(baseId: string, value: string) {\n  return `${baseId}-trigger-${value}`;\n}\n\nfunction makeContentId(baseId: string, value: string) {\n  return `${baseId}-content-${value}`;\n}\n\nconst Root = Tabs;\nconst List = TabsList;\nconst Trigger = TabsTrigger;\nconst Content = TabsContent;\n\nexport {\n  createTabsScope,\n  //\n  Tabs,\n  TabsList,\n  TabsTrigger,\n  TabsContent,\n  //\n  Root,\n  List,\n  Trigger,\n  Content,\n};\nexport type { TabsProps, TabsListProps, TabsTriggerProps, TabsContentProps };\n"],"names":["Tabs","TabsPrimitive","TabsList","React","_ref","ref","className","props","_objectWithoutProperties","_excluded","_jsx","_objectSpread","concat","styles","trim","displayName","TabsTrigger","_ref2","_excluded2","TabsContent","_ref3","_excluded3","StudentsPage","navigate","useNavigate","_jsxs","container","children","Button","variant","onClick","backButton","ArrowLeft","backIcon","content","header","title","subtitle","defaultValue","tabs","tabsList","value","Card","CardHeader","CardTitle","CardDescription","CardContent","priceSection","price","priceDescription","infoSection","listContainer","listTitle","benefitsList","ctaButton","ambassadorContent","applyButton","DirectionContext","useDirection","localDir","globalDir","ENTRY_FOCUS","EVENT_OPTIONS","bubbles","cancelable","GROUP_NAME","Collection","useCollection","createCollectionScope","createCollection","createRovingFocusGroupContext","createRovingFocusGroupScope","createContextScope","RovingFocusProvider","useRovingFocusContext","RovingFocusGroup","forwardedRef","jsx","Provider","scope","__scopeRovingFocusGroup","Slot","RovingFocusGroupImpl","orientation","loop","dir","currentTabStopId","currentTabStopIdProp","defaultCurrentTabStopId","onCurrentTabStopIdChange","onEntryFocus","preventScrollOnEntryFocus","groupProps","composedRefs","useComposedRefs","direction","setCurrentTabStopId","useControllableState","prop","defaultProp","onChange","isTabbingBackOut","setIsTabbingBackOut","handleEntryFocus","useCallbackRef","getItems","isClickFocusRef","focusableItemsCount","setFocusableItemsCount","node","current","addEventListener","removeEventListener","onItemFocus","tabStopId","onItemShiftTab","onFocusableItemAdd","prevCount","onFocusableItemRemove","Primitive","div","tabIndex","style","outline","onMouseDown","composeEventHandlers","onFocus","event","isKeyboardFocus","target","currentTarget","entryFocusEvent","CustomEvent","dispatchEvent","defaultPrevented","items","filter","item","focusable","focusFirst","find","active","id","Boolean","map","onBlur","ITEM_NAME","RovingFocusGroupItem","itemProps","autoId","useId","context","isCurrentTabStop","ItemSlot","span","preventDefault","onKeyDown","key","shiftKey","focusIntent","getDirectionAwareKey","includes","MAP_KEY_TO_FOCUS_INTENT","getFocusIntent","metaKey","ctrlKey","altKey","candidateNodes","reverse","currentIndex","indexOf","startIndex","array","_","index","length","slice","setTimeout","ArrowUp","ArrowRight","ArrowDown","PageUp","Home","PageDown","End","candidates","preventScroll","arguments","undefined","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","focus","Root","Item","TABS_NAME","createTabsContext","createTabsScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","__scopeTabs","valueProp","onValueChange","activationMode","tabsProps","setValue","baseId","TAB_LIST_NAME","listProps","rovingFocusGroupScope","asChild","role","TRIGGER_NAME","disabled","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","button","type","isAutomaticActivation","CONTENT_NAME","forceMount","contentProps","_excluded4","isMountAnimationPreventedRef","rAF","requestAnimationFrame","cancelAnimationFrame","Presence","present","hidden","animationDuration","Root2","List","Trigger","Content"],"sourceRoot":""}